{"version":3,"sources":["App.js","index.js"],"names":["App","useState","currentOperand","setCurrentOperand","previousOperand","setPreviousOperand","operation","setOperation","operators","prev","cur","appendNumber","number","includes","length","String","chooseOperation","className","onClick","slice","parseFloat","isNaN","total","compute","ReactDOM","render","document","getElementById"],"mappings":"qOA6EeA,MA1Ef,WAAgB,IAAD,EACiCC,mBAAS,KAD1C,mBACJC,EADI,KACYC,EADZ,OAEmCF,mBAAS,IAF5C,mBAEJG,EAFI,KAEaC,EAFb,OAGuBJ,qBAHvB,mBAGJK,EAHI,KAGOC,EAHP,KAKLC,EAAY,CACd,IAAK,SAACC,EAAMC,GAAP,OAAeD,EAAOC,GAC3B,IAAK,SAACD,EAAMC,GAAP,OAAeD,EAAOC,GAC3B,IAAK,SAACD,EAAMC,GAAP,OAAeD,EAAOC,GAC3B,OAAK,SAACD,EAAMC,GAAP,OAAeD,EAAOC,IAazBC,EAAe,SAACC,GACH,MAAXA,GAAkBV,EAAeW,SAAS,MAASX,EAAeY,OAAS,IAC/EX,EAAsC,MAAnBD,EAA0Ba,OAAOH,GAAUV,EAAiBU,IAG7EI,EAAkB,SAACV,GACC,KAAnBJ,IAEHK,EAAaD,GACbD,EAAmBH,GACnBC,EAAkB,MActB,OACI,sBAAKc,UAAU,kBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SAAmCb,IACnC,qBAAKa,UAAU,kBAAf,SAAkCf,OAEtC,wBAAQgB,QAAS,kBAvCrBf,EAAkB,KAClBE,EAAmB,SACnBE,KAqCoCU,UAAU,WAA1C,gBACA,wBAAQC,QAAS,WAlCrBf,EAAkBD,EAAeiB,MAAM,GAAI,KAkCvC,iBACA,wBAAQD,QAAS,kBAAMF,EAAgB,SAAvC,kBACA,wBAAQE,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMF,EAAgB,MAAvC,eACA,wBAAQE,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMF,EAAgB,MAAvC,eACA,wBAAQE,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAAMF,EAAgB,MAAvC,eACA,wBAAQE,QAAS,kBAAMP,EAAa,MAApC,eACA,wBAAQO,QAAS,kBAAMP,EAAa,IAApC,eACA,wBAAQO,QAAS,kBAlCT,WACZ,IAAMT,EAAOW,WAAWhB,GAClBM,EAAMU,WAAWlB,GACvB,IAAGmB,MAAMZ,KAASY,MAAMX,IAASF,EAAUF,GAA3C,CAEA,IAAIgB,EAAQP,OAAOP,EAAUF,GAAWG,EAAMC,IAC9CP,EAAkBmB,GAClBf,IACAF,EAAmB,KA0BQkB,IAAWN,UAAU,WAA5C,mBCnEZO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.93f9638d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    const [currentOperand, setCurrentOperand] = useState('0')\r\n    const [previousOperand, setPreviousOperand] = useState('')\r\n    const [operation, setOperation] = useState()\r\n\r\n    const operators = {\r\n        '+': (prev, cur) => prev + cur,\r\n        '-': (prev, cur) => prev - cur,\r\n        '*': (prev, cur) => prev * cur,\r\n        'รท': (prev, cur) => prev / cur\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentOperand('0')\r\n        setPreviousOperand('')\r\n        setOperation()\r\n    }\r\n\r\n    const deleteNumber = () => {\r\n        setCurrentOperand(currentOperand.slice(0, -1))\r\n    }\r\n\r\n    const appendNumber = (number) => {\r\n        if((number === '.' && currentOperand.includes('.')) || currentOperand.length > 12) return\r\n        setCurrentOperand((currentOperand === '0') ? String(number) : currentOperand + number)\r\n    }\r\n\r\n    const chooseOperation = (operation) => {\r\n        if(currentOperand === '') return\r\n\r\n        setOperation(operation)\r\n        setPreviousOperand(currentOperand)\r\n        setCurrentOperand('')\r\n    }\r\n\r\n    const compute = () => {\r\n        const prev = parseFloat(previousOperand)\r\n        const cur = parseFloat(currentOperand)\r\n        if(isNaN(prev) || isNaN(cur) || !operators[operation]) return\r\n        \r\n        let total = String(operators[operation](prev, cur))\r\n        setCurrentOperand(total)\r\n        setOperation()\r\n        setPreviousOperand('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"calculator-grid\">\r\n            <div className=\"output\">\r\n                <div className=\"previous-operand\">{previousOperand}</div>\r\n                <div className=\"current-operand\">{currentOperand}</div>\r\n            </div>\r\n            <button onClick={() => clear()} className=\"span-two\">AC</button>\r\n            <button onClick={() => deleteNumber()}>DEL</button>\r\n            <button onClick={() => chooseOperation('รท')}>รท</button>\r\n            <button onClick={() => appendNumber(1)}>1</button>\r\n            <button onClick={() => appendNumber(2)}>2</button>\r\n            <button onClick={() => appendNumber(3)}>3</button>\r\n            <button onClick={() => chooseOperation('*')}>*</button>\r\n            <button onClick={() => appendNumber(4)}>4</button>\r\n            <button onClick={() => appendNumber(5)}>5</button>\r\n            <button onClick={() => appendNumber(6)}>6</button>\r\n            <button onClick={() => chooseOperation('+')}>+</button>\r\n            <button onClick={() => appendNumber(7)}>7</button>\r\n            <button onClick={() => appendNumber(8)}>8</button>\r\n            <button onClick={() => appendNumber(9)}>9</button>\r\n            <button onClick={() => chooseOperation('-')}>-</button>\r\n            <button onClick={() => appendNumber('.')}>.</button>\r\n            <button onClick={() => appendNumber(0)}>0</button>\r\n            <button onClick={() => compute()} className=\"span-two\">=</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}